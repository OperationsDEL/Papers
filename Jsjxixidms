local function setgame()
while true do
wait(0.1)
-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "dif_impossible"
}

game:GetService("ReplicatedStorage").RemoteFunctions.PlaceDifficultyVote:InvokeServer(unpack(args))
end
end
spawn(setgame)

local function reset()
while true do
wait(0.1)

game:GetService("ReplicatedStorage").RemoteFunctions.RestartGame:InvokeServer()

end
end
spawn(reset)

local function skip()
while true do
wait(0.1)

-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = "y"
}

game:GetService("ReplicatedStorage").RemoteFunctions.SkipWave:InvokeServer(unpack(args))
end
end
spawn(skip)

local function autoplace()

local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Remote = ReplicatedStorage.RemoteFunctions.PlaceUnit
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HRP = Character:WaitForChild("HumanoidRootPart")

while true do
    wait()
    local pos = HRP.Position
    local x = pos.X + math.random(-10,10)
    local z = pos.Z + math.random(-10,10)
    local y = 0
    local cf = CFrame.new(x,y,z) * CFrame.Angles(-math.pi,0,-math.pi)
    local args = {
        [1] = "unit_tomato_plant",
        [2] = {
            ["Valid"] = true,
            ["Position"] = Vector3.new(x,y,z),
            ["CF"] = cf,
            ["Rotation"] = 180
        }
    }
    Remote:InvokeServer(unpack(args))
end
end
spawn(autoplace)
