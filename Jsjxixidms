
spawn(function()
    while true do
        local player = game:GetService("Players").LocalPlayer
        local humanoid = player.Character and player.Character:FindFirstChild("Humanoid")
        if humanoid then
            humanoid.WalkSpeed = 60
        end
        wait(1)
    end
end)

local Players = game:GetService("Players")
local LocalPlayer = Players.LocalPlayer
local Character = LocalPlayer.Character or LocalPlayer.CharacterAdded:Wait()
local HumanoidRootPart = Character:WaitForChild("HumanoidRootPart")

spawn(function()
while true do
wait(1)
if (HumanoidRootPart.Position - Vector3.new(104, 65, 972)).Magnitude <= 50 then
HumanoidRootPart.CFrame = CFrame.new(135.60, 65.17, 818.28)
end
end
end)


local function autoupgrade()
while true do

for _, child in ipairs(workspace.Map.Entities:GetChildren()) do
	if child:IsA("Model") then
		local value = child:GetAttribute("ID")
		
		
		if value then
			local args = {
				value
			}
			game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctions"):WaitForChild("UpgradeUnit"):InvokeServer(unpack(args))
		end
	end
end
wait(1)
end
end
spawn(autoupgrade)
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- AutoPerms GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "AutoPermsGui"

local toggle = true
local button = Instance.new("TextButton", gui)
button.Size = UDim2.new(0, 80, 0, 35)
button.Position = UDim2.new(1, -90, 0, 10)
button.AnchorPoint = Vector2.new(0, 0)
button.Text = "AutoPerms"
button.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
button.TextScaled = true

local thread = coroutine.create(function()
	while toggle do
		local args = {
			"y"
		}
		game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctions"):WaitForChild("SkipWave"):InvokeServer(unpack(args))
		wait()
	end
end)
coroutine.resume(thread)

button.MouseButton1Click:Connect(function()
	toggle = not toggle
	if toggle then
		button.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
		thread = coroutine.create(function()
			while toggle do
				local args = {
					"y"
				}
				game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctions"):WaitForChild("SkipWave"):InvokeServer(unpack(args))
				wait()
			end
		end)
		coroutine.resume(thread)
	else
		button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	end
end)
local Players = game:GetService("Players")
local player = Players.LocalPlayer

local function autolacefr()
    while true do
        local username = player.Name

        if username == "vinepart3" or username == "vinepart5" or username == "vinepart8" then
            local positions = {
                Vector3.new(-332.1462707519531, 63.38456726074219, -134.61106872558594),
                Vector3.new(-309.78564453125, 63.38456726074219, -141.19989013671875),
                Vector3.new(-309.39697265625, 63.38456726074219, -171.59605407714844),
            }

            for _, pos in ipairs(positions) do
                local args = {
                    "unit_gnome_npc",
                    {
                        ["Valid"] = true,
                        ["Position"] = pos,
                        ["CF"] = CFrame.new(pos) * CFrame.Angles(-math.pi, 0, -math.pi),
                        ["Rotation"] = 180
                    }
                }
                game:GetService("ReplicatedStorage").RemoteFunctions.PlaceUnit:InvokeServer(unpack(args))
                wait(1)
            end

        elseif username ~= "soulbatch4" then
            local positions = {
                Vector3.new(-336.0242614746094, 63.38456726074219, -122.77183532714844),
                Vector3.new(-335.97540283203125, 63.38456726074219, -204.4977569580078),
            }

            for _, pos in ipairs(positions) do
                local args = {
                    "unit_gnome_npc",
                    {
                        ["Valid"] = true,
                        ["Position"] = pos,
                        ["CF"] = CFrame.new(pos) * CFrame.Angles(-math.pi, 0, -math.pi),
                        ["Rotation"] = 180
                    }
                }
                game:GetService("ReplicatedStorage").RemoteFunctions.PlaceUnit:InvokeServer(unpack(args))
                wait(1)
            end
        end

        wait(1)
    end
end

spawn(autolacefr)


local function timerwo()
while true do
-- Script generated by SimpleSpy - credits to exx#9394

local args = {
    [1] = 2
}

game:GetService("ReplicatedStorage").RemoteFunctions.ChangeTickSpeed:InvokeServer(unpack(args))
wait(5)
end
end
spawn(timerwo)
local Players = game:GetService("Players")
local player = Players.LocalPlayer

-- AutoPerms GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "AutoPermsGui"

local toggle = true
local button = Instance.new("TextButton", gui)
button.Size = UDim2.new(0, 80, 0, 35)
button.Position = UDim2.new(1, -90, 0, 10)
button.AnchorPoint = Vector2.new(0, 0)
button.Text = "AutoPerms"
button.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
button.TextScaled = true

local thread = coroutine.create(function()
	while toggle do
		local args = {
			"y"
		}
		game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctions"):WaitForChild("SkipWave"):InvokeServer(unpack(args))
		wait()
	end
end)
coroutine.resume(thread)

button.MouseButton1Click:Connect(function()
	toggle = not toggle
	if toggle then
		button.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
		thread = coroutine.create(function()
			while toggle do
				local args = {
					"y"
				}
				game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctions"):WaitForChild("SkipWave"):InvokeServer(unpack(args))
				wait()
			end
		end)
		coroutine.resume(thread)
	else
		button.BackgroundColor3 = Color3.fromRGB(255, 0, 0)
	end
end)

-- Auto Restart
local function autorestart()
	while true do
		game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctions"):WaitForChild("RestartGame"):InvokeServer()
		wait(1)
	end
end
spawn(autorestart)

-- Difficulty Vote GUI
local gui = Instance.new("ScreenGui", player:WaitForChild("PlayerGui"))
gui.Name = "DifficultyVote"

local buttonNames = {"easy", "medium", "hard", "impossible"}
local active = "impossible"
local threads = {}

for i, name in ipairs(buttonNames) do
	local button = Instance.new("TextButton", gui)
	button.Size = UDim2.new(0, 100, 0, 40)
	button.Position = UDim2.new(0, 10, 0, 10 + ((i - 1) * 50))
	button.Text = name
	button.Name = name
	button.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
	button.TextScaled = true

	if name == "impossible" then
		button.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
		local diffArg = "dif_" .. name
		local thread = coroutine.create(function()
			while active == name do
				local args = {
					diffArg
				}
				game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctions"):WaitForChild("PlaceDifficultyVote"):InvokeServer(unpack(args))
				wait(1)
			end
		end)
		threads[name] = thread
		coroutine.resume(thread)
	end

	button.MouseButton1Click:Connect(function()
		if active == name then return end
		active = name
		for _, b in ipairs(gui:GetChildren()) do
			if b:IsA("TextButton") then
				b.BackgroundColor3 = Color3.fromRGB(80, 80, 80)
			end
		end
		button.BackgroundColor3 = Color3.fromRGB(0, 255, 0)
		for _, t in pairs(threads) do
			if t then
				coroutine.close(t)
			end
		end
		local diffArg = "dif_" .. name
		local thread = coroutine.create(function()
			while active == name do
				local args = {
					diffArg
				}
				game:GetService("ReplicatedStorage"):WaitForChild("RemoteFunctions"):WaitForChild("PlaceDifficultyVote"):InvokeServer(unpack(args))
				wait(1)
			end
		end)
		threads[name] = thread
		coroutine.resume(thread)
	end)
end
