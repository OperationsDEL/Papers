local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local player = Players.LocalPlayer
local hrp = player.Character:WaitForChild("HumanoidRootPart")

repeat
    local args = {
        [1] = "aa67bc20-36c0-4a87-8560-4b0197509b7d",
        [2] = {
            [1] = {
                ["rift"] = workspace.spawnPrefabs.Rifts.HubToVoid
            }
        }
    }
    ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:FindFirstChild("vnzYBeyivvjlaiqyQVtJjmGgKKnibnw/spejcsviPceqLpjk"):FireServer(unpack(args))
    task.wait(1)
until (hrp.Position - Vector3.new(-10167, 110, 10298)).Magnitude <= 200

for _, part in ipairs(player.Character:GetDescendants()) do
    if part:IsA("BasePart") then
        part.CanCollide = false
    end
end

local bv = Instance.new("BodyVelocity")
bv.Velocity = Vector3.new(0, 0, 0)
bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
bv.Parent = hrp

while true do
    local closest, dist
    for _, block in ipairs(workspace.WildernessBlocks:GetChildren()) do
        if block.Name == "voidParasite" and block:IsA("BasePart") then
            local d = (hrp.Position - block.Position).Magnitude
            if not dist or d < dist then
                closest = block
                dist = d
            end
        end
    end
    if closest then
        local time = dist / 26
        local tween = TweenService:Create(hrp, TweenInfo.new(time, Enum.EasingStyle.Linear), {CFrame = closest.CFrame})
        tween:Play()
        if (hrp.Position - closest.Position).Magnitude <= 20 then
            local args = {
                [1] = {
                    ["player"] = player,
                    ["model"] = closest,
                    ["tukiqepvhyyBj"] = "\7\240\159\164\163\240\159\164\161\7\n\7\n\7\nFOenfsq",
                }
            }
            ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.CLIENT_HARVEST_CROP_REQUEST:InvokeServer(unpack(args))
        end
    end
    task.wait()
end
