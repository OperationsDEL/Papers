local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local TweenService = game:GetService("TweenService")
local RunService = game:GetService("RunService")
local player = Players.LocalPlayer
local hrp = player.Character:WaitForChild("HumanoidRootPart")
local RemoteFolder = ReplicatedStorage.rbxts_include.node_modules["@rbxts"].net.out._NetManaged

local function gotoVoid()
    repeat
        local args = {
            [1] = "aa67bc20-36c0-4a87-8560-4b0197509b7d",
            [2] = {
                [1] = {
                    ["rift"] = workspace.spawnPrefabs.Rifts.HubToVoid
                }
            }
        }
        ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged:FindFirstChild("vnzYBeyivvjlaiqyQVtJjmGgKKnibnw/spejcsviPceqLpjk"):FireServer(unpack(args))
        task.wait(1)
    until (hrp.Position - Vector3.new(-10167, 110, 10298)).Magnitude <= 200
end

local bv = Instance.new("BodyVelocity")
bv.Velocity = Vector3.new(0, 0, 0)
bv.MaxForce = Vector3.new(9e9, 9e9, 9e9)
bv.Parent = hrp

RunService.Stepped:Connect(function()
    for _, part in ipairs(player.Character:GetDescendants()) do
        if part:IsA("BasePart") then
            part.CanCollide = false
        end
    end
end)

local farming = true

local function farmLoop()
    while farming do
        local closest, dist
        for _, block in ipairs(workspace.WildernessBlocks:GetChildren()) do
            if block.Name == "voidParasite" and block:IsA("BasePart") then
                local d = (hrp.Position - block.Position).Magnitude
                if not dist or d < dist then
                    closest = block
                    dist = d
                end
            end
        end
        if closest then
            local time = dist / 27
            local tween = TweenService:Create(hrp, TweenInfo.new(time, Enum.EasingStyle.Linear), {CFrame = closest.CFrame})
            tween:Play()
            if (hrp.Position - closest.Position).Magnitude <= 20 then
                local args = {
                    [1] = {
                        ["player"] = player,
                        ["model"] = closest,
                        ["tukiqepvhyyBj"] = "\7\240\159\164\163\240\159\164\161\7\n\7\n\7\nFOenfsq",
                    }
                }
                RemoteFolder.CLIENT_HARVEST_CROP_REQUEST:InvokeServer(unpack(args))
            end
        end
        task.wait()
    end
end

local function depositSeeds(otherPlayer)
    local otherUserId = otherPlayer.UserId
    for _, island in ipairs(workspace.Islands:GetChildren()) do
        local owners = island:FindFirstChild("Owners")
        if owners then
            for _, val in ipairs(owners:GetChildren()) do
                if val:IsA("NumberValue") and val.Value == otherUserId then
                    local args = {
                        [1] = {["island"] = island}
                    }
                    RemoteFolder.CLIENT_VISIT_ISLAND_REQUEST:InvokeServer(unpack(args))
                    local blocks = island:FindFirstChild("Blocks")
                    if blocks then
                        for _, block in ipairs(blocks:GetChildren()) do
                            if string.find(block.Name:lower(), "chest") then
                                local backpack = player:FindFirstChild("Backpack")
                                if backpack then
                                    for _, item in ipairs(backpack:GetChildren()) do
                                        if string.find(item.Name:lower(), "seed") then
                                            local amount = 0
                                            if item:FindFirstChild("Amount") then
                                                amount = math.min(item.Amount.Value, 1250)
                                            end
                                            RemoteFolder.CLIENT_CHEST_TRANSACTION:InvokeServer({
                                                ["chest"] = block,
                                                ["player_tracking_category"] = "join_from_web",
                                                ["amount"] = amount,
                                                ["tool"] = item,
                                                ["action"] = "deposit"
                                            })
                                            task.wait(0.1)
                                        end
                                    end
                                end
                            end
                        end
                    end
                    break
                end
            end
        end
    end
end

local function startCycle()
    farming = true
    gotoVoid()
    spawn(farmLoop)
end

local function stopCycle()
    farming = false
end

Players.PlayerAdded:Connect(function(p)
    if p ~= player then
        stopCycle()
        task.wait(1)
        depositSeeds(p)
    end
end)

Players.PlayerRemoving:Connect(function(p)
    if p ~= player then
        task.wait(1)
        startCycle()
    end
end)

startCycle()



