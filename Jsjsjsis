



local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local Players = game:GetService("Players")

local AttackSlimes = false

local function GetClosestRock()
    local diamondTarget, rockTarget = nil, nil
    local diamondDist, rockDist = math.huge, math.huge
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    for _, child in ipairs(workspace.WildernessBlocks:GetChildren()) do
        if string.find(child.Name:lower(), "rock") and child:FindFirstChild("1") then
            local dist = (humanoidRootPart.Position - child.Position).Magnitude
            if string.find(child.Name:lower(), "diamond") then
                if dist < diamondDist then
                    diamondTarget = child
                    diamondDist = dist
                end
            else
                if dist < rockDist then
                    rockTarget = child
                    rockDist = dist
                end
            end
        end
    end
    return diamondTarget or rockTarget
end

local function TweenToRock(target)
    local player = Players.LocalPlayer
    local character = player.Character or player.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local destination = target.Position + Vector3.new(0, 8, 0)
    if not humanoidRootPart:FindFirstChild("AutoTPVelocity") then
        local bv = Instance.new("BodyVelocity")
        bv.Velocity = Vector3.new(0, 0, 0)
        bv.MaxForce = Vector3.new(1e9, 1e9, 1e9)
        bv.Name = "AutoTPVelocity"
        bv.Parent = humanoidRootPart
    end
    local distance = (humanoidRootPart.Position - destination).Magnitude
    local speed = distance <= 8 and 9999999 or 30
    local duration = distance / speed
    local tween = TweenService:Create(humanoidRootPart, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = CFrame.new(destination)})
    tween:Play()
    tween.Completed:Wait()
end

local function farmores()
    while true do
        if AttackSlimes then
            local rock = GetClosestRock()
            if rock then
                TweenToRock(rock)
            end
        end
        wait()
    end
end

spawn(farmores)

local function breakores()
    while true do
        if AttackSlimes then
            local target = GetClosestRock()
            if target then
                local args = {
                    [1] = {
                        ["xkpOrfvithbzcvKundjsvoamBnpkqBsXm"] = "\7\240\159\164\163\240\159\164\161\7\n\7\n\7\nkyaxebDphmkcyha",
                        ["part"] = target:FindFirstChild("1"),
                        ["block"] = target,
                    }
                }
                ReplicatedStorage.rbxts_include.node_modules:FindFirstChild("@rbxts").net.out._NetManaged.CLIENT_BLOCK_HIT_REQUEST:InvokeServer(unpack(args))
            end
        end
        wait()
    end
end

spawn(breakores)


local function TeleportToSlime()
    while true do
        local player = Players.LocalPlayer
        local character = player.Character or player.CharacterAdded:Wait()
        local root = character:WaitForChild("HumanoidRootPart")
        local foundPortal = false
        for _, island in ipairs(workspace.Islands:GetChildren()) do
            if island:IsA("Model") then
                local blocks = island:FindFirstChild("Blocks")
                if blocks and #blocks:GetChildren() > 0 then
                    for _, block in ipairs(blocks:GetChildren()) do
                        if block.Name == "portalToSpawn" then
                            local part = block:FindFirstChild("Part")
                            if part and part:IsA("BasePart") then
                                local distance = (root.Position - part.Position).Magnitude
                                if distance <= 1000 then
                                    AttackSlimes = false
                                    root.CFrame = part.CFrame
                                    task.wait(3)
                                    foundPortal = true
                                    break
                                end
                            end
                        end
                    end
                end
            end
            if foundPortal then break end
        end
        if not foundPortal then
            local pos1 = Vector3.new(1575.69, 210.103, 108.088)
            local pos2 = Vector3.new(2480, 238, 110)
            local dist1 = (root.Position - pos1).Magnitude
            local dist2 = (root.Position - pos2).Magnitude
            if dist1 <= dist2 then
                AttackSlimes = false
                root.CFrame = CFrame.new(pos1)
                task.wait(3)
            else
                repeat
                    AttackSlimes = true
                    wait()
                    for _, island in ipairs(workspace.Islands:GetChildren()) do
                        if island:IsA("Model") then
                            local blocks = island:FindFirstChild("Blocks")
                            if blocks and #blocks:GetChildren() > 0 then
                                for _, block in ipairs(blocks:GetChildren()) do
                                    if block.Name == "portalToSpawn" then
                                        local part = block:FindFirstChild("Part")
                                        if part and part:IsA("BasePart") then
                                            local distance = (root.Position - part.Position).Magnitude
                                            if distance <= 1000 then
                                                return
                                            end
                                        end
                                    end
                                end
                            end
                        end
                    end
                    local distToPos1 = (root.Position - Vector3.new(1575.69, 210.103, 108.088)).Magnitude
                until distToPos1 > (root.Position - pos2).Magnitude
            end
        end
        wait(3)
    end
end
spawn(TeleportToSlime)




local Players = game:GetService("Players")

local function EquipTool(toolName)
    for i = 0, 7 do
        if Players.LocalPlayer.Character:FindFirstChild(toolName) then break end
        Players.LocalPlayer.ClientHotbarIndex.Value = i
        wait()
    end
end

local function AutoEquipVoidMattock()
    local LocalPlayer = Players.LocalPlayer
    while true do
        repeat EquipTool("voidMattock") wait() until LocalPlayer.Character:FindFirstChild("voidMattock")
        wait(1)
    end
end

spawn(AutoEquipVoidMattock)





local timer = 0
local function TimerRun()
    while true do
        timer = timer + 1
        wait(1)
    end
end
spawn(TimerRun)

local function SendWebhook()
    while true do
        local HttpService = game:GetService("HttpService")
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local webhookUrl = "https://discord.com/api/webhooks/1233196606401019975/qIxgbxZsF4dwVkMkDNB_Ei-p7zWhGwQ4DoPlgraHwJOkhUedOaDH6PYLDeXtNElNOF4x"
        local requestFunction = (syn and syn.request) or request or (http and http.request) or http_request

        local green, blue, pink = 0, 0, 0
        local pancake, dragonroll, shieldantler, hammerantler = 0, 0, 0, 0

        for _, item in ipairs(LocalPlayer.Backpack:GetChildren()) do
            if item.Name == "stickyGearGreen" and item:FindFirstChild("Amount") then
                green = item.Amount.Value
            elseif item.Name == "stickyGearBlue" and item:FindFirstChild("Amount") then
                blue = item.Amount.Value
            elseif item.Name == "stickyGearPink" and item:FindFirstChild("Amount") then
                pink = item.Amount.Value
            elseif item.Name == "pancakeFhanhorn" and item:FindFirstChild("Amount") then
                pancake = item.Amount.Value
            elseif item.Name == "sushiDragonRoll" and item:FindFirstChild("Amount") then
                dragonroll = item.Amount.Value
            elseif item.Name == "shieldAntler" and item:FindFirstChild("Amount") then
                shieldantler = item.Amount.Value
            elseif item.Name == "antlerHammer" and item:FindFirstChild("Amount") then
                hammerantler = item.Amount.Value
            end
        end

        local data = {
            ["content"] = LocalPlayer.Name .. " DATA :\n" ..
                "Sticky Green Gears : " .. green .. "\n" ..
                "Sticky Blue Gears : " .. blue .. "\n" ..
                "Sticky Pink Gears : " .. pink .. "\n" ..
                "Pancakes : " .. pancake .. "\n" ..
                "Dragon Roll : " .. dragonroll .. "\n" ..
                "Shield Antler : " .. shieldantler .. "\n" ..
                "Hammer Antler : " .. hammerantler .. "\n" ..
                "Server Active : " .. timer
        }

        requestFunction({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(data)
        })

        wait(360)
    end
end
spawn(SendWebhook)
