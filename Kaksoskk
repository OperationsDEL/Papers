

local Thisisautoslimesnigga = false
-- Services
local TweenService = game:GetService("TweenService")
local ReplicatedStorage = game:GetService("ReplicatedStorage")
local HttpService = game:GetService("HttpService")
local Players = game:GetService("Players")
local VirtualInputManager = game:GetService("VirtualInputManager")
local camera = workspace.CurrentCamera

-- Variables
local localPlayer = Players.LocalPlayer
local AttackSlimes = false
local monitoringOtherPlayers = false
local tweenReference = nil

-- Helper Functions
local function GetTime(distance, speed)
    return distance / speed
end

local function CancelTweens()
    if tweenReference then
        tweenReference:Cancel()
        tweenReference = nil
    end
    local hrp = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
    if hrp then
        local bv = hrp:FindFirstChild("AutoTPVelocity")
        if bv then
            bv:Destroy()
        end
    end
end

local function GetClosestSlime()
    local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
    local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
    local closest = nil
    local shortestDist = math.huge
    for _, child in ipairs(workspace.WildernessIsland.Entities:GetChildren()) do
        if child.Name == "slime" and child:FindFirstChild("HumanoidRootPart") then
            local dist = (humanoidRootPart.Position - child.HumanoidRootPart.Position).Magnitude
            if dist < shortestDist then
                closest = child
                shortestDist = dist
            end
        end
    end
    return closest
end

local function FarmSlimes()
    while true do
        if AttackSlimes then
            local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
            local humanoidRootPart = character:WaitForChild("HumanoidRootPart")
            local closest = GetClosestSlime()
            if closest then
                local destination = closest.HumanoidRootPart.Position + Vector3.new(0, 8, 0)
                if not humanoidRootPart:FindFirstChild("AutoTPVelocity") then
                    local bv = Instance.new("BodyVelocity")
                    bv.Velocity = Vector3.new(0, 0, 0)
                    bv.MaxForce = Vector3.new(1e9, 1e9, 1e9)
                    bv.Name = "AutoTPVelocity"
                    bv.Parent = humanoidRootPart
                end
                local distance = (humanoidRootPart.Position - destination).Magnitude
                local speed = distance <= 8 and 9999999 or 30
                local duration = GetTime(distance, speed)
                tweenReference = TweenService:Create(humanoidRootPart, TweenInfo.new(duration, Enum.EasingStyle.Linear), {CFrame = CFrame.new(destination)})
                tweenReference:Play()
            end
        end
        task.wait(0.01)
    end
end
spawn(FarmSlimes)

local function SlimeRemote()
    while true do
        if AttackSlimes then
            task.wait(0.01)
            local closest = GetClosestSlime()
            if closest then
                local args = {
                    [1] = HttpService:GenerateGUID(false),
                    [2] = {
                        [1] = {
                            ["hitUnit"] = closest,
                            ["UiItXhnkf"] = "\7\240\159\164\163\240\159\164\161\7\n\7\n\7\nTwudhybaivliemzqrcNmf"
                        }
                    }
                }
                ReplicatedStorage.rbxts_include.node_modules["@rbxts"].net.out._NetManaged["jiqEhnmoMV/ZlgessyomwyEX"]:FireServer(unpack(args))
            end
        end
        task.wait(0.01)
    end
end
spawn(SlimeRemote)

local function AutoClick()
    while true do
        if AttackSlimes then
            local size = camera.ViewportSize
            local center = Vector2.new(size.X / 2, size.Y / 2)
            VirtualInputManager:SendMouseButtonEvent(center.X, center.Y, 0, true, game, 0)
            VirtualInputManager:SendMouseButtonEvent(center.X, center.Y, 0, false, game, 0)
        end
        task.wait(0.3)
    end
end
spawn(AutoClick)

local function VisitOtherPlayerIslandIfExists()
    while true do
        if #Players:GetPlayers() > 1 and not monitoringOtherPlayers then
            monitoringOtherPlayers = true
            AttackSlimes = false
            CancelTweens()

            local myUserId = localPlayer.UserId
            for _, island in ipairs(workspace.Islands:GetChildren()) do
                local owners = island:FindFirstChild("Owners")
                if owners then
                    for _, owner in ipairs(owners:GetChildren()) do
                        if owner:IsA("NumberValue") and owner.Value ~= myUserId then
                            local args = {
                                [1] = {
                                    ["island"] = island
                                }
                            }
                            ReplicatedStorage.rbxts_include.node_modules["@rbxts"].net.out._NetManaged.CLIENT_VISIT_ISLAND_REQUEST:InvokeServer(unpack(args))

                            local character = localPlayer.Character or localPlayer.CharacterAdded:Wait()
                            local root = character:WaitForChild("HumanoidRootPart")

                            repeat
                                task.wait(3)
                            until (root.Position - Players:GetPlayerByUserId(owner.Value).Character.HumanoidRootPart.Position).Magnitude <= 100

                            repeat
                                local backpack = localPlayer:WaitForChild("Backpack")
                                local tool = nil
                                for _, item in ipairs(backpack:GetChildren()) do
                                    if table.find({"stickyGearGreen", "StickyGearBlue", "StickyGearPink", "sheildAntler", "hammerAntler"}, item.Name) then
                                        tool = item
                                        break
                                    end
                                end
                                if not tool then break end

                                local blocks = island:FindFirstChild("Blocks")
                                if blocks then
                                    for _, block in ipairs(blocks:GetChildren()) do
                                        if string.find(block.Name:lower(), "chest") then
                                            local remote = ReplicatedStorage.rbxts_include.node_modules["@rbxts"].net.out._NetManaged.client_request_35
                                            remote:InvokeServer({
                                                ["chest"] = block,
                                                ["player_tracking_category"] = "join_from_web",
                                                ["amount"] = 1,
                                                ["tool"] = tool,
                                                ["action"] = "deposit"
                                            })
                                        end
                                    end
                                end
                                task.wait(1)
                            until #backpack:GetChildren() == 0
                        end
                    end
                end
            end
        elseif #Players:GetPlayers() == 1 and monitoringOtherPlayers then
            monitoringOtherPlayers = false
            task.wait(2)
            local root = localPlayer.Character and localPlayer.Character:FindFirstChild("HumanoidRootPart")
            if root then
                local pos1 = Vector3.new(148.12, 32.5, -739.05)
                local pos2 = Vector3.new(700.10, 195, -216)
                root.CFrame = CFrame.new((root.Position - pos1).Magnitude <= (root.Position - pos2).Magnitude and pos1 or pos2)
                task.wait(2)
                AttackSlimes = true
            end
        end
        task.wait(2)
    end
end
spawn(VisitOtherPlayerIslandIfExists)




local Players = game:GetService("Players")
local ReplicatedStorage = game:GetService("ReplicatedStorage")

local function IsActive(imageId)
    local potionList = Players.LocalPlayer:WaitForChild("PlayerGui"):WaitForChild("PotionList")
    for _, child in ipairs(potionList:GetChildren()) do
        if child:IsA("Frame") then
            for _, subChild in ipairs(child:GetChildren()) do
                if subChild:IsA("Frame") then
                    for _, last in ipairs(subChild:GetChildren()) do
                        if last:IsA("ImageLabel") and last.Image == imageId then
                            return true
                        end
                    end
                end
            end
        end
    end
    return false
end

local function EquipTool(toolName)
    for i = 0, 7 do
        if Players.LocalPlayer.Character:FindFirstChild(toolName) then break end
        Players.LocalPlayer.ClientHotbarIndex.Value = i
        wait()
    end
end

local function AutoEquipWeapon()
    local LocalPlayer = Players.LocalPlayer
    while true do
        local hasFhanhorn = false
        local hasSushi = false

        for _, item in ipairs(LocalPlayer.Backpack:GetChildren()) do
            if item.Name == "pancakeFhanhorn" and item:FindFirstChild("Amount") and item.Amount.Value >= 1 then
                hasFhanhorn = true
            elseif item.Name == "sushiDragonRoll" and item:FindFirstChild("Amount") and item.Amount.Value >= 1 then
                hasSushi = true
            end
        end

        local fhanhornActive = IsActive("rbxassetid://8109860244")
        local sushiActive = IsActive("rbxassetid://7981378557")

        if not fhanhornActive and hasFhanhorn then
            repeat EquipTool("pancakeFhanhorn") wait() until LocalPlayer.Character:FindFirstChild("pancakeFhanhorn")
            for _, child in ipairs(game.Workspace:GetChildren()) do
                if child.Name == LocalPlayer.Name then
                    local args = {["tool"] = child:FindFirstChild("pancakeFhanhorn")}
                    ReplicatedStorage.rbxts_include.node_modules["@rbxts"].net.out._NetManaged.CLIENT_EAT_FOOD:InvokeServer(args)
                end
            end
            wait(1)
        elseif not sushiActive and hasSushi then
            repeat EquipTool("sushiDragonRoll") wait() until LocalPlayer.Character:FindFirstChild("sushiDragonRoll")
            for _, child in ipairs(game.Workspace:GetChildren()) do
                if child.Name == LocalPlayer.Name then
                    local args = {["tool"] = child:FindFirstChild("sushiDragonRoll")}
                    ReplicatedStorage.rbxts_include.node_modules["@rbxts"].net.out._NetManaged.CLIENT_EAT_FOOD:InvokeServer(args)
                end
            end
            wait(1)
        else
            repeat EquipTool("rageblade") wait() until LocalPlayer.Character:FindFirstChild("rageblade")
        end

        wait(1)
    end
end

spawn(AutoEquipWeapon)


local timer = 0
local function TimerRun()
    while true do
        timer = timer + 1
        wait(1)
    end
end
spawn(TimerRun)


local function SendWebhook()
    while true do
        local HttpService = game:GetService("HttpService")
        local Players = game:GetService("Players")
        local LocalPlayer = Players.LocalPlayer
        local requestFunction = (syn and syn.request) or request or (http and http.request) or http_request

        local webhooks = {
            ["3-6"] = "https://discord.com/api/webhooks/1380901650503438436/mJCDUILkmdqvNRvSSh7XiiEwPUEE4uqa7ON1U8jaf1ULN0d-_Ji-YRaGaw1QmBoqJDYn",
            ["7-10"] = "https://discord.com/api/webhooks/1380901602919190569/Fi1ZcV4toKiXBEc5hPQeH7Aut32CDlxD7yumFDGpbjJAHF2uQZDWTHwwhuBAwg72C8kU"
        }

        local function getWebhookForUsername(name)
            local number = tonumber(string.match(name, "%d+$"))
            if number then
                if number >= 3 and number <= 6 then
                    return webhooks["3-6"]
                elseif number >= 7 and number <= 10 then
                    return webhooks["7-10"]
                end
            end
            return nil
        end

        local webhookUrl = getWebhookForUsername(LocalPlayer.Name)
        if not webhookUrl then return end

        local green, blue, pink = 0, 0, 0
        local pancake, dragonroll, shieldantler, hammerantler = 0, 0, 0, 0

        for _, item in ipairs(LocalPlayer.Backpack:GetChildren()) do
            if item.Name == "stickyGearGreen" and item:FindFirstChild("Amount") then
                green = item.Amount.Value
            elseif item.Name == "stickyGearBlue" and item:FindFirstChild("Amount") then
                blue = item.Amount.Value
            elseif item.Name == "stickyGearPink" and item:FindFirstChild("Amount") then
                pink = item.Amount.Value
            elseif item.Name == "pancakeFhanhorn" and item:FindFirstChild("Amount") then
                pancake = item.Amount.Value
            elseif item.Name == "sushiDragonRoll" and item:FindFirstChild("Amount") then
                dragonroll = item.Amount.Value
            elseif item.Name == "shieldAntler" and item:FindFirstChild("Amount") then
                shieldantler = item.Amount.Value
            elseif item.Name == "antlerHammer" and item:FindFirstChild("Amount") then
                hammerantler = item.Amount.Value
            end
        end

        local data = {
            ["content"] = LocalPlayer.Name .. " DATA :\n" ..
                "Sticky Green Gears : " .. green .. "\n" ..
                "Sticky Blue Gears : " .. blue .. "\n" ..
                "Sticky Pink Gears : " .. pink .. "\n" ..
                "Pancakes : " .. pancake .. "\n" ..
                "Dragon Roll : " .. dragonroll .. "\n" ..
                "Shield Antler : " .. shieldantler .. "\n" ..
                "Hammer Antler : " .. hammerantler .. "\n" ..
                "Server Active : " .. (timer or "N/A")
        }

        requestFunction({
            Url = webhookUrl,
            Method = "POST",
            Headers = {
                ["Content-Type"] = "application/json"
            },
            Body = HttpService:JSONEncode(data)
        })

        wait(360)
    end
end

spawn(SendWebhook)
